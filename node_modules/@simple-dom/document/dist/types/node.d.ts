import { SimpleChildNodes, SimpleNode, SimpleNodeType } from '@simple-dom/interface';
export default abstract class Node implements SimpleNode {
    readonly nodeName: string;
    nodeValue: string | null;
    readonly abstract nodeType: SimpleNodeType;
    parentNode: SimpleNode | null;
    previousSibling: SimpleNode | null;
    nextSibling: SimpleNode | null;
    firstChild: SimpleNode | null;
    lastChild: SimpleNode | null;
    private _childNodes;
    constructor(nodeName: string, nodeValue: string | null);
    readonly childNodes: SimpleChildNodes;
    cloneNode(deep?: boolean): SimpleNode;
    appendChild<T extends SimpleNode>(newChild: T): T;
    insertBefore<T extends SimpleNode>(newChild: T, refChild: SimpleNode | null): T;
    removeChild<T extends SimpleNode>(oldChild: T): T;
    protected abstract _cloneNode(): SimpleNode;
}
